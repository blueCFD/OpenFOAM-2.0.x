diff --git a/src/OpenFOAM/primitives/random/Random.C b/src/OpenFOAM/primitives/random/Random.C
index e974f5c..5c595eb 100644
--- a/src/OpenFOAM/primitives/random/Random.C
+++ b/src/OpenFOAM/primitives/random/Random.C
@@ -27,6 +27,10 @@ License

 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

+#if defined( WIN32 ) || defined( WIN64 )
+#include "random.c"
+#endif
+
 namespace Foam
 {

@@ -37,6 +41,16 @@ namespace Foam
 #    error "The random number generator may not work!"
 #endif

+#if defined( WIN32 ) || defined( WIN64 )
+#    define USE_RANDOM 1
+//#    define srandom srand
+//#    define random rand
+//#ifdef INT_MAX
+//#undef INT_MAX
+//#endif
+//#    define INT_MAX RAND_MAX
+#endif
+
 #ifdef USE_RANDOM
 #   include <climits>
 #else
diff --git a/src/Pstream/Allwmake b/src/Pstream/Allwmake
index a01538c..6db87d8 100755
--- a/src/Pstream/Allwmake
+++ b/src/Pstream/Allwmake
@@ -2,15 +2,31 @@
 cd ${0%/*} || exit 1    # run from this directory
 set -x

-wmake libso dummy
+buildMode="libso"
+
+if isMinGW; then
+  if [ "$WM_PSTREAMLINK" = "LINKTOPSTREAM" ]; then
+    buildMode="libso"
+  else
+    buildMode="libo"
+  fi
+fi
+
+wmake $buildMode dummy

 case "$WM_MPLIB" in
 *MPI*)
     set +x
     echo
     echo "Note: ignore spurious warnings about missing mpicxx.h headers"
-    set -x
-    (WM_OPTIONS=${WM_OPTIONS}$WM_MPLIB; wmake libso mpi)
+
+    if isMinGW; then
+      set -x
+      wmake $buildMode mpi
+    else
+      set -x
+      (WM_OPTIONS_LOCAL=${WM_OPTIONS}$WM_MPLIB; wmake $buildMode mpi)
+    fi
     ;;

 #GAMMA)
@@ -18,5 +34,6 @@ case "$WM_MPLIB" in
 #    ;;
 esac

+unset buildMode

 # ----------------------------------------------------------------- end-of-file
diff --git a/src/Pstream/dummy/Make/options b/src/Pstream/dummy/Make/options
index e69de29..4261914 100644
--- a/src/Pstream/dummy/Make/options
+++ b/src/Pstream/dummy/Make/options
@@ -0,0 +1,5 @@
+#if defined( WIN32 ) || defined( WIN64 )
+PROJECT_LIBS = -l$(WM_PROJECT)
+#else
+PROJECT_LIBS =
+#endif
diff --git a/src/Pstream/mpi/Make/options b/src/Pstream/mpi/Make/options
index 90632e8..38d718b 100644
--- a/src/Pstream/mpi/Make/options
+++ b/src/Pstream/mpi/Make/options
@@ -2,3 +2,9 @@ include $(RULES)/mplib$(WM_MPLIB)

 EXE_INC = $(PFLAGS) $(PINC)
 LIB_LIBS = $(PLIBS)
+
+#if defined( WIN32 ) || defined( WIN64 )
+  PROJECT_LIBS = -l$(WM_PROJECT)
+#else
+  PROJECT_LIBS =
+#endif
diff --git a/src/decompositionMethods/Allwmake b/src/decompositionMethods/Allwmake
index e2612ef..69e7df3 100755
--- a/src/decompositionMethods/Allwmake
+++ b/src/decompositionMethods/Allwmake
@@ -4,13 +4,23 @@ set -x

 wmakeLnInclude decompositionMethods

+if [ "NONE" != "$WM_MPLIB" ]; then
+
+#this is to guarantee that scotchDecomp is built with the correct headers
+if [ -e "scotchDecomp/scotchDecomp.dep" ]; then
+  rm scotchDecomp/scotchDecomp.dep
+fi
+
 wmake libso scotchDecomp
 wmake libso metisDecomp

 if [ -d "$FOAM_MPI_LIBBIN" ]
 then
-    WM_OPTIONS=${WM_OPTIONS}$WM_MPLIB
+    WM_OPTIONS_LOCAL=${WM_OPTIONS}$WM_MPLIB
     wmake libso parMetisDecomp
+    unset WM_OPTIONS_LOCAL
+fi
+
 fi

 wmake libso decompositionMethods
diff --git a/src/decompositionMethods/decompositionMethods/Make/options b/src/decompositionMethods/decompositionMethods/Make/options
index 6dcbd79..a4381b1 100644
--- a/src/decompositionMethods/decompositionMethods/Make/options
+++ b/src/decompositionMethods/decompositionMethods/Make/options
@@ -1,8 +1,14 @@
 EXE_INC =

+#if !(defined( WIN32 ) || defined( WIN64 ))
+
 LIB_LIBS = \
     -L$(FOAM_LIBBIN)/dummy \
     -L$(FOAM_MPI_LIBBIN) \
     -lscotchDecomp \
     -lmetisDecomp \
     -lparMetisDecomp
+
+/* for MinGW/Windows, nothing needs to be done! */
+#endif
+
diff --git a/src/decompositionMethods/metisDecomp/Make/options b/src/decompositionMethods/metisDecomp/Make/options
index d7ad5e1..d2d07f2 100644
--- a/src/decompositionMethods/metisDecomp/Make/options
+++ b/src/decompositionMethods/metisDecomp/Make/options
@@ -8,4 +8,9 @@ LIB_LIBS = \
     -L$(FOAM_LIBBIN)/dummy \
     -lmetis \
     -lGKlib
+
+#if defined( WIN32 ) || defined( WIN64 )
+LIB_LIBS += -ldecompositionMethods \
+    -lscotchDecomp
+#endif

diff --git a/src/decompositionMethods/parMetisDecomp/Make/options b/src/decompositionMethods/parMetisDecomp/Make/options
index 76a64be..3e0891b 100644
--- a/src/decompositionMethods/parMetisDecomp/Make/options
+++ b/src/decompositionMethods/parMetisDecomp/Make/options
@@ -8,7 +8,16 @@ EXE_INC = \
     -I../metisDecomp/lnInclude \
     -I../scotchDecomp/lnInclude

+#if defined( WIN32 ) || defined( WIN64 )
+LIB_LIBS = \
+    -ldecompositionMethods \
+    -lmetis-parmetis \
+    -lparmetis \
+    -lscotchDecomp \
+    -lmetisDecomp
+#else
 LIB_LIBS = \
     -L$(FOAM_MPI_LIBBIN) \
     -lmetis-parmetis \
     -lparmetis
+#endif
diff --git a/src/decompositionMethods/scotchDecomp/Make/options b/src/decompositionMethods/scotchDecomp/Make/options
index e889f9e..286a3ba 100644
--- a/src/decompositionMethods/scotchDecomp/Make/options
+++ b/src/decompositionMethods/scotchDecomp/Make/options
@@ -2,9 +2,13 @@ include $(RULES)/mplib$(WM_MPLIB)

 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(WM_THIRD_PARTY_DIR)/scotch_5.1/include \
-    -I/usr/include/scotch \
+    -I$(WM_SCOTCH_PLATFORMS_DIR)/include \
     -I../decompositionMethods/lnInclude

 LIB_LIBS = \
+    -L$(FOAM_MPI_LIBBIN) \
     -lscotch -lscotcherrexit
+
+#if defined( WIN32 ) || defined( WIN64 )
+LIB_LIBS += -ldecompositionMethods
+#endif
diff --git a/src/decompositionMethods/scotchDecomp/scotchDecomp.C b/src/decompositionMethods/scotchDecomp/scotchDecomp.C
index 9a697ef..652efd3 100644
--- a/src/decompositionMethods/scotchDecomp/scotchDecomp.C
+++ b/src/decompositionMethods/scotchDecomp/scotchDecomp.C
@@ -111,6 +111,7 @@ License
 #include "cyclicPolyPatch.H"
 #include "OFstream.H"

+#include "mpi.h"
 extern "C"
 {
 #include "scotch.h"
@@ -123,7 +124,7 @@ extern "C"
 #    define LINUX
 #endif

-#if defined(LINUX) && defined(__GNUC__)
+#if defined(LINUX) && defined(__GNUC__) && (!defined(WIN32) && !defined(WIN64))
 #    define LINUX_GNUC
 #endif

diff --git a/src/dummyThirdParty/MGridGen/MGridGen/Make/options b/src/dummyThirdParty/MGridGen/MGridGen/Make/options
index 4c3dd78..de4bd05 100644
--- a/src/dummyThirdParty/MGridGen/MGridGen/Make/options
+++ b/src/dummyThirdParty/MGridGen/MGridGen/Make/options
@@ -1,3 +1,7 @@
 EXE_INC =

-EXE_LIBS =
+LIB_LIBS =
+
+#if defined( WIN32 ) || defined( WIN64 )
+LIB_LIBS += -ldecompositionMethods
+#endif
diff --git a/src/dummyThirdParty/metisDecomp/Make/options b/src/dummyThirdParty/metisDecomp/Make/options
index c61e828..41eab9e 100644
--- a/src/dummyThirdParty/metisDecomp/Make/options
+++ b/src/dummyThirdParty/metisDecomp/Make/options
@@ -2,4 +2,8 @@ EXE_INC = \
     -I$(FOAM_SRC)/decompositionMethods/decompositionMethods/lnInclude \
     -I$(FOAM_SRC)/decompositionMethods/metisDecomp/lnInclude

-LIB_LIBS =
+LIB_LIBS =
+
+#if defined( WIN32 ) || defined( WIN64 )
+LIB_LIBS += -ldecompositionMethods
+#endif
diff --git a/src/dummyThirdParty/parMetisDecomp/Make/options b/src/dummyThirdParty/parMetisDecomp/Make/options
index 3500e6b..2334474 100644
--- a/src/dummyThirdParty/parMetisDecomp/Make/options
+++ b/src/dummyThirdParty/parMetisDecomp/Make/options
@@ -2,4 +2,8 @@ EXE_INC = \
     -I$(FOAM_SRC)/decompositionMethods/decompositionMethods/lnInclude \
     -I$(FOAM_SRC)/decompositionMethods/parMetisDecomp/lnInclude

-LIB_LIBS =
+LIB_LIBS =
+
+#if defined( WIN32 ) || defined( WIN64 )
+LIB_LIBS += -ldecompositionMethods
+#endif
diff --git a/src/dummyThirdParty/scotchDecomp/Make/options b/src/dummyThirdParty/scotchDecomp/Make/options
index a9952cf..96cc000 100644
--- a/src/dummyThirdParty/scotchDecomp/Make/options
+++ b/src/dummyThirdParty/scotchDecomp/Make/options
@@ -3,3 +3,7 @@ EXE_INC = \
     -I$(FOAM_SRC)/decompositionMethods/scotchDecomp/lnInclude

 LIB_LIBS =
+
+#if defined( WIN32 ) || defined( WIN64 )
+LIB_LIBS += -ldecompositionMethods
+#endif
diff --git a/wmake/Makefile b/wmake/Makefile
index 2f2be98..af08266 100644
--- a/wmake/Makefile
+++ b/wmake/Makefile
@@ -58,7 +58,8 @@ WM_SCRIPTS   = $(WM_DIR)/scripts
 LIB_SRC            = $(WM_PROJECT_DIR)/src
 LIB_DIR            = $(WM_PROJECT_DIR)/lib
 LIB_WM_OPTIONS_DIR = $(LIB_DIR)/$(WM_OPTIONS)
-OBJECTS_DIR        = $(MAKE_DIR)/$(WM_OPTIONS)
+WM_OPTIONS_LOCAL  ?= $(WM_OPTIONS)
+OBJECTS_DIR        = $(MAKE_DIR)/$(WM_OPTIONS_LOCAL)
 CLASSES_DIR        = $(MAKE_DIR)/classes

 SYS_INC            =
@@ -94,6 +95,9 @@ LIB             = libNULL
 # Shared library extension
 SO              = so

+# Executable extension
+EXE_EXT         =
+
 # Project executable
 EXE             = $(WM_PROJECT).out

@@ -146,18 +150,21 @@ LIB_HEADER_DIRS = \
 # define link statements for executables
 #------------------------------------------------------------------------------

-$(EXE):  $(OBJECTS)
-      @$(WM_SCRIPTS)/mkObjectDir $(EXE)
+EXECUTABLE  = $(EXE)$(EXE_EXT)
+SEXECUTABLE = $(SEXE)$(EXE_EXT)
+
+$(EXECUTABLE):  $(OBJECTS)
+      @$(WM_SCRIPTS)/mkObjectDir $(EXECUTABLE)
       $(LINKEXE) $(OBJECTS) -L$(LIB_WM_OPTIONS_DIR) \
-      $(EXE_LIBS) $(PROJECT_LIBS) $(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(EXE)
+      $(EXE_LIBS) $(PROJECT_LIBS) $(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(EXECUTABLE)

-exe:     $(SEXE)
-      @echo \'$(SEXE)\' is up to date.
+exe:     $(SEXECUTABLE)
+      @echo \`$(SEXECUTABLE)\' is up to date.

-$(SEXE): $(OBJECTS)
-      @$(WM_SCRIPTS)/mkObjectDir $(SEXE)
+$(SEXECUTABLE): $(OBJECTS)
+      @$(WM_SCRIPTS)/mkObjectDir $(SEXECUTABLE)
       $(LINKEXE) $(OBJECTS) $(EXE_LIBS) \
-         $(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(SEXE)
+         $(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(SEXECUTABLE)


 #------------------------------------------------------------------------------
@@ -170,8 +177,9 @@ libso:   $(LIB).$(SO)
 $(LIB).$(SO): $(OBJECTS)
       @$(WM_SCRIPTS)/mkObjectDir $(LIB)
       @rm -f so_locations
+      @echo $(LINKLIBSO) $(LOCAL_OBJECTS) -L$(LIB_WM_OPTIONS_DIR) $(PROJECT_LIBS) $(LIB_LIBS) $(GLIB_LIBS) -o $(LIB).$(SO)
       @cd $(OBJECTS_DIR) ; \
-      $(LINKLIBSO) $(LOCAL_OBJECTS) -L$(LIB_WM_OPTIONS_DIR) $(LIB_LIBS) $(GLIB_LIBS) -o $(LIB).$(SO)
+      $(LINKLIBSO) $(LOCAL_OBJECTS) -L$(LIB_WM_OPTIONS_DIR) $(PROJECT_LIBS) $(LIB_LIBS) $(GLIB_LIBS) -o $(LIB).$(SO)

 lib:     $(LIB).a
       @echo \'$(LIB).a\' is up to date.
